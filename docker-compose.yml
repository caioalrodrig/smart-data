services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - smartdata-network

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - smartdata-network
  
  producer:
    build:
      context: ./producer
      dockerfile: ../Dockerfile.producer
    container_name: producer
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - database
      - database_mongo
    networks:
      - smartdata-network

  consumer:
    build:
      context: ./consumer
      dockerfile: ../Dockerfile.consumer
    container_name: consumer
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    networks:
      - smartdata-network

  database:
    image: postgres
    container_name: database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: smartdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - smartdata-network

  database_mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: smartdata
      MONGO_SCRAM_MEMBERS: 2
    networks:
      - smartdata-network
    volumes:
      - mongodb_data:/data/db
    
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - smartdata-network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  
  grafana:
    image: grafana/grafana-enterprise:12.1.1
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - smartdata-network
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana


networks:
  smartdata-network:
    driver: bridge

volumes:
  grafana-data:
  grafana-config:
  mongodb_data: